import random

import pyjokes
import telebot
import randfacts
from telebot import types
from deep_translator import GoogleTranslator
import requests
import shutil

# –í —ç—Ç–æ –º–µ—Å—Ç–æ –Ω—É–∂–Ω–æ –≤—Å—Ç–∞–≤–∏—Ç—å —Ç–æ–∫–µ–Ω —Å–≤–æ–µ–≥–æ –±–æ—Ç–∞!
API_TOKEN = ""
bot = telebot.TeleBot(API_TOKEN)
# –ø–µ—Ä–µ–≤–æ–¥—á–∏–∫
translator = GoogleTranslator(source="auto", target="ru")

#—Å–ª—É—á–∞–π–Ω—ã–π —Ñ–∞–∫—Ç –æ —á–∏—Å–ª–µ
numbers_url = "http://numbersapi.com/"
#—Å–ª—É—á–∞–π–Ω—ã–µ –∫–∞—Ä—Ç–∏–Ω–∫–∏ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø—Ä–∏—Ä–æ–¥–∞ (nature)
pictures_url = "https://api.api-ninjas.com/v1/randomimage?category=nature"
#–∫–ª—é—á –¥–ª—è API —Å –∫–∞—Ä—Ç–∏–Ω–∫–∞–º–∏
pictures_api_key = "vX/WAHjtRF2exfGFIqpxUA==nhKATTvaGXf25oIm"

# —Å–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∏–≥—Ä–æ–∫–æ–≤
users = set()
# –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–≥—Ä—ã
# user_stat = {
#     "username": {"shots": 0, "stricken": 0},
#     "username2": {"shots": 0, "stricken": 0},
# }
user_stat = {}

actions = {
    "—Ç–∞–ø–æ–∫": "–¢–∞–ø–∫–∏ –ø–æ–ª–µ—Ç–µ–ª–∏ –≤ @",
    "—Å–Ω–µ–∂–æ–∫": "–ö–∏–¥–∞—é —Å–Ω–µ–∂–æ–∫ –≤ @",
    "–ª–∞–ø–∫–∞ —É–¥–∞—á–∏": "–£–¥–∞—Ä –º–µ—Ö–æ–≤–æ–π –ª–∞–ø–∫–æ–π —Å –¥–≤–æ–π–Ω–æ–π —Å–∏–ª–æ–π –ø–æ @",
    "–ª—ë–¥": "–£–¥–∞—Ä—ã —Ñ—Ä—É–∫—Ç–æ–≤—ã–º–∏ –∫—É–±–∏–∫–∞–º–∏ –ª—å–¥–∞ –ø–æ @"
}


# –ê–∫—Ç–∏–≤–∞—Ü–∏—è –≤–∑–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –±–æ—Ç–æ–º
# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@bot.message_handler(commands=['start'])
def send_welcome(message):
    # –º–µ–Ω—é —Å –Ω–∞—á–∞–ª–æ–º —à—É—Ç–µ—Ä–∞ –∏ –∫–Ω–æ–ø–∫–æ–π —Å—Ç–∞—Ä—Ç
    menu = types.ReplyKeyboardMarkup(row_width=2)

    start_button = types.KeyboardButton("/start")
    shooter_button = types.KeyboardButton("ü•∑ shooter ü•∑")
    joke_button = types.KeyboardButton("üòÇ –ê–Ω–µ–∫–¥–æ—Ç üòÇ")
    fact_button = types.KeyboardButton("ü§î –§–∞–∫—Ç ü§î")
    number_fact_button = types.KeyboardButton("üî¢ –§–∞–∫—Ç –æ —á–∏—Å–ª–µ üî¢")
    picture_button = types.KeyboardButton("üåÖ –ö–∞—Ä—Ç–∏–Ω–∫–∞ üåÖ")
    shots_button = types.KeyboardButton("/stat")
    help_button = types.KeyboardButton("/help")

    menu.add(start_button)
    menu.add(shooter_button)
    menu.add(joke_button)
    menu.add(fact_button)
    menu.add(number_fact_button)
    menu.add(picture_button)
    menu.add(shots_button)
    menu.add(help_button)

    # –¥–æ–±–∞–≤–∏—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–π –±–∞–∑–µ –±–æ—Ç–∞
    current_user = message.from_user.username
    users.add(current_user)
    user_stat[current_user] = {"shots": 0, "stricken": 0}

    bot.reply_to(message,
                 f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç–∞, {current_user}! –ê–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: {users}",
                 reply_markup=menu)


# –æ–±—Ä–∞–±–æ—Ç–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É —Å –Ω–∞—á–∞–ª–æ–º —à—É—Ç–µ—Ä–∞, –º–µ—Ç–æ–¥ —Å–æ–∑–¥–∞–Ω–∏—è –∏–Ω–ª–Ω–∞–π–Ω-–º–µ–Ω—é —Å —à—É—Ç–µ—Ä–æ–º
@bot.message_handler(func=lambda message: message.text == "ü•∑ shooter ü•∑")
def start_shooter(message):
    buttons = {
        "–ö–∏–Ω—É—Ç—å —Ç–∞–ø–∫–æ–ºü©¥": {"callback_data": "—Ç–∞–ø–æ–∫"},
        "–ö–∏–Ω—É—Ç—å —Å–Ω–µ–∂–∫–æ–º‚òÉÔ∏è": {"callback_data": "—Å–Ω–µ–∂–æ–∫"},
        "–î–≤–æ–π–Ω–æ–π —É–¥–∞—Ä –ª–∞–ø–∫–æ–π —É–¥–∞—á–∏üêæ": {"callback_data": "–ª–∞–ø–∫–∞ —É–¥–∞—á–∏"},
        "–ó–∞–º–æ—Ä–æ–∂–µ–Ω–Ω—ã–π –ª–µ–¥‚ùÑÔ∏è": {"callback_data": "–ª—ë–¥"}
    }
    menu = telebot.util.quick_markup(buttons, row_width=1)
    bot.reply_to(message, text="Shooter started", reply_markup=menu)


# –æ–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É –≤ —à—É—Ç–µ—Ä–µ
# –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–ª–∏ –ø—É—Å—Ç—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å lambda call: call.data
@bot.callback_query_handler(func=lambda call: call.data)
def make_shot(call):
    if len(users) > 0:
        victim_username = random.choice(list(users))
    else:
        victim_username = "unknown_user"

    # –∏–∑–º–µ–Ω—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    # user_stat = {
    #     "username": {"shots": 0, "stricken": 0},
    #     "username2": {"shots": 0, "stricken": 0},
    # }
    action_username = call.from_user.username
    if action_username not in user_stat:
        bot.edit_message_text(
            chat_id=call.message.chat.id,
            message_id=call.message.id,
            text=f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {action_username} –Ω–µ –≤ –∏–≥—Ä–µ",
        )

    user_stat[call.from_user.username]["shots"] += 1
    user_stat[victim_username]["stricken"] += 1
    # user_stat = {
    #     "username": {"shots": 1, "stricken": 0},
    #     "username2": {"shots": 0, "stricken": 1},
    # }

    message = actions.get(call.data) + victim_username
    bot.edit_message_text(
        chat_id=call.message.chat.id,
        message_id=call.message.id,
        text=message,
    )


# –∫–æ–º–∞–Ω–¥–∞ –≤—ã–≤–æ–¥–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –≤ —á–∞—Ç
@bot.message_handler(commands=["stat"])
def stat_handler(message):
    if not user_stat:
        bot.reply_to(message, "–ò–≥—Ä–∞ –µ—â–µ –Ω–µ –Ω–∞—á–∞–ª–∞—Å—å")
    else:
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:
        # username1: –≤—ã—Å—Ç—Ä–µ–ª–æ–≤ - 1, –≤ –∏–≥—Ä–æ–∫–∞ –≤—ã—Å—Ç—Ä–µ–ª–∏–ª–∏ - 2
        # username2: –≤—ã—Å—Ç—Ä–µ–ª–æ–≤ - 2, –≤ –∏–≥—Ä–æ–∫–∞ –≤—ã—Å—Ç—Ä–µ–ª–∏–ª–∏ - 1
        output = "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:"
        for username, stat in user_stat.items():
            stat_message = (
                f"{username}:  –≤—ã—Å—Ç—Ä–µ–ª–æ–≤ - {stat['shots']}, "
                f"–≤ –∏–≥—Ä–æ–∫–∞ –≤—ã—Å—Ç—Ä–µ–ª–∏–ª–∏ - {stat['stricken']}"
            )
            output = f"{output}\n{stat_message}"

        bot.reply_to(message, output)


# —Å–ª—É—á–∞–π–Ω–∞—è —à—É—Ç–∫–∞
@bot.message_handler(func=lambda message: message.text == "üòÇ –ê–Ω–µ–∫–¥–æ—Ç üòÇ")
def joke_handler(message):
    joke = pyjokes.get_joke(category="chuck")
    ru_joke = translator.translate(joke)
    bot.reply_to(message, text=ru_joke)


# —Å–ª—É—á–∞–π–Ω—ã–π —Ñ–∞–∫—Ç
@bot.message_handler(func=lambda message: message.text == "ü§î –§–∞–∫—Ç ü§î")
def fact_handler(message):
    fact = randfacts.get_fact()
    ru_fact = translator.translate(fact)
    bot.reply_to(message, text=ru_fact)


# –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–π —Ñ–∞–∫—Ç –æ —á–∏—Å–ª–µ –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ –æ—Ç 0 –¥–æ 10000
@bot.message_handler(func=lambda message: message.text == "üî¢ –§–∞–∫—Ç –æ —á–∏—Å–ª–µ üî¢")
def fact_number_handler(message):
    number = random.randint(0, 100)
    url = f"{numbers_url}{number}"
    response = requests.get(url=url)
    text_ru = translator.translate(response.text)
    bot.reply_to(message, text=text_ru)


# –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª—É—á–∞–π–Ω—É—é –∫–∞—Ä—Ç–∏–Ω–∫—É
@bot.message_handler(func=lambda message: message.text == "üåÖ –ö–∞—Ä—Ç–∏–Ω–∫–∞ üåÖ")
def picture_handler(message):
    response = requests.get(pictures_url,
                            headers={"X-Api-Key": pictures_api_key, "Accept": "image/jpg"},
                            stream=True)
    if response.status_code == requests.codes.ok:
        with open("img.jpg", "wb") as out_file:
            shutil.copyfileobj(response.raw, out_file)
            bot.send_photo(chat_id=message.chat.id, photo=open(out_file.name, "rb"))
    else:
        print("Error:", response.status_code, response.text)
        bot.reply_to(message, text="–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è")


# –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∞–≥—Ä–µ—Å—Å–∏–∏: /shots
# username10 - 20 –≤—ã—Å—Ç—Ä–µ–ª–∞
# username1 - 2 –≤—ã—Å—Ç—Ä–µ–ª–∞
# username2 - 1 –≤—ã—Å—Ç—Ä–µ–ª–∞
# –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤—ã–∂–∏–≤—à–∏—Ö: /alive
# username2 - 1 –≤—ã—Å—Ç—Ä–µ–ª–∞
# username1 - 2 –≤—ã—Å—Ç—Ä–µ–ª–∞
# username10 - 20 –≤—ã—Å—Ç—Ä–µ–ª–∞
@bot.message_handler(commands=["help"])
def help_handler(message):
    output = ("/start - –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –≤ –±–æ—Ç–µ\n"
              "ü•∑ shooter ü•∑ - —à—É—Ç–µ—Ä\n"
              "üòÇ –ê–Ω–µ–∫–¥–æ—Ç üòÇ - —Å–ª—É—á–∞–π–Ω—ã–π –∞–Ω–µ–∫–¥–æ—Ç\n"
              "ü§î –§–∞–∫—Ç ü§î - —Å–ª—É—á–∞–π–Ω—ã–π —Ñ–∞–∫—Ç\n"
              "üî¢ –§–∞–∫—Ç –æ —á–∏—Å–ª–µ üî¢ - —Å–ª—É—á–∞–π–Ω—ã–π —Ñ–∞–∫—Ç –æ —Å–ª—É—á–∞–π–Ω–æ–º —á–∏—Å–ª–µ –æ—Ç 0 –¥–æ 100\n"
              "üåÖ –ö–∞—Ä—Ç–∏–Ω–∫–∞ üåÖ - —Å–ª—É—á–∞–π–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–∞ —Ç–µ–º—É\n"
              "/stat - –ø–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏–≥—Ä—ã\n"
              "/help - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ\n")
    bot.reply_to(message, output)


print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
bot.infinity_polling()
